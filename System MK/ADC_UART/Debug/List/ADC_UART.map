################################################################################
#                                                                              #
#      IAR Universal Linker V4.59Z/386                                         #
#                                                                              #
#           Link time     =  07/May/2008  11:43:13                             #
#           Target CPU    =  A90                                               #
#           List file     =  "E:\Рабочая програсса РЭА (образец)\LABORATOR_WOR #
#                            KS\ADC_UART\Debug\List\ADC_UART.map"              #
#           Output file 1 =  "E:\Рабочая програсса РЭА (образец)\LABORATOR_WOR #
#                            KS\ADC_UART\Debug\Exe\ADC_UART.dbg"               #
#                            Format: debug                                     #
#                            UBROF version 10.0.2                              #
#           Output file 2 =  "E:\Рабочая програсса РЭА (образец)\LABORATOR_WOR #
#                            KS\ADC_UART\Debug\Exe\ADC_UART.hex"               #
#                            Format: intel-extended                            #
#           Command line  =  "E:\Рабочая програсса РЭА (образец)\LABORATOR_WOR #
#                            KS\ADC_UART\Debug\Obj\float2ASCIIasm.r90"         #
#                            "E:\Рабочая програсса РЭА (образец)\LABORATOR_WOR #
#                            KS\ADC_UART\Debug\Obj\main_uart_rem.r90"          #
#                            -o                                                #
#                            "E:\Рабочая програсса РЭА (образец)\LABORATOR_WOR #
#                            KS\ADC_UART\Debug\Exe\ADC_UART.dbg"               #
#                            -Fubrof -z -l                                     #
#                            "E:\Рабочая програсса РЭА (образец)\LABORATOR_WOR #
#                            KS\ADC_UART\Debug\List\ADC_UART.map"              #
#                            -xmsnio                                           #
#                            "-IC:\Program Files\IAR Systems\Embedded Workbenc #
#                            h 4.0 Evaluation\avr\LIB\"                        #
#                            -f                                                #
#                            "C:\Program Files\IAR Systems\Embedded Workbench  #
#                            4.0 Evaluation\avr\src\template\cfgm8.xcl"        #
#                            (-D_..X_INTVEC_SIZE=26 -D_..X_FLASH_NEND=1FFF     #
#                            -D_..X_FLASH_END=1FFF -D_..X_SRAM_BASE=60         #
#                            -D_..X_SRAM_TBASE=_..X_SRAM_BASE                  #
#                            -D_..X_SRAM_TSIZE=(100-_..X_SRAM_BASE)            #
#                            -D_..X_SRAM_END=45F                               #
#                            -D_..X_EXT_SRAM_BASE=_..X_SRAM_END                #
#                            -D_..X_EXT_SRAM_SIZE=0                            #
#                            -D_..X_EXT_ROM_BASE=_..X_SRAM_END                 #
#                            -D_..X_EXT_ROM_SIZE=0                             #
#                            -D_..X_EXT_NV_BASE=_..X_SRAM_END                  #
#                            -D_..X_EXT_NV_SIZE=0 -D_..X_EEPROM_END=1FF        #
#                            -D_..X_EEPROM_START=0) -D_..X_HEAP_SIZE=10        #
#                            -D_..X_TINY_HEAP_SIZE=0 -D_..X_NEAR_HEAP_SIZE=0   #
#                            -D_..X_FAR_HEAP_SIZE=0 -D_..X_HUGE_HEAP_SIZE=0    #
#                            -D_..X_CSTACK_SIZE=20 -D_..X_RSTACK_SIZE=20 -f    #
#                            "C:\Program Files\IAR Systems\Embedded Workbench  #
#                            4.0 Evaluation\avr\src\template\cfg1soim.xcl"     #
#                            (-ca90 -w29 -Z(CODE)INTVEC=0-_..X_INTVEC_SIZE     #
#                            -Z(CODE)TINY_F=_..X_FLASH_BASE-FF                 #
#                            -Z(CODE)NEAR_F=_..X_FLASH_BASE-_..X_FLASH_END     #
#                            -Z(CODE)SWITCH=_..X_FLASH_BASE-_..X_FLASH_END     #
#                            -Z(CODE)INITTAB=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)DIFUNCT=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)CODE=_..X_FLASH_BASE-_..X_FLASH_END       #
#                            -Z(CODE)TINY_ID=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)NEAR_ID=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)CHECKSUM#_..X_FLASH_END                   #
#                            -Z(DATA)TINY_I,TINY_Z,TINY_N=_..X_SRAM_TBASE:+_.. #
#                            X_SRAM_TSIZE                                      #
#                            -Z(DATA)CSTACK+_..X_CSTACK_SIZE=_..X_CSTACK_BASE- #
#                            _..X_CSTACK_END                                   #
#                            -Z(DATA)HEAP+_..X_HEAP_SIZE=_..X_SRAM_BASE-_..X_S #
#                            RAM_END                                           #
#                            -Z(DATA)IOSTREAM_N#_..X_SRAM_BASE-_..X_SRAM_END   #
#                            -Z(DATA)NEAR_HEAP+_..X_NEAR_HEAP_SIZE=_..X_SRAM_B #
#                            ASE-_..X_SRAM_END                                 #
#                            -Z(DATA)RSTACK+_..X_RSTACK_SIZE=_..X_RSTACK_BASE- #
#                            _..X_RSTACK_END                                   #
#                            -Z(DATA)NEAR_I,NEAR_Z,NEAR_N=_..X_SRAM_BASE-_..X_ #
#                            SRAM_END                                          #
#                            -Z(XDATA)EEPROM_I,EEPROM_N=_..X_EEPROM_START-_..X #
#                            _EEPROM_END)                                      #
#                            -D_..X_FLASH_BASE=_..X_INTVEC_SIZE -H1895         #
#                            -h(CODE)0-(_..X_INTVEC_SIZE-1)                    #
#                            -D_..X_CSTACK_BASE=_..X_SRAM_BASE                 #
#                            -D_..X_CSTACK_END=_..X_SRAM_END                   #
#                            -D_..X_RSTACK_BASE=_..X_SRAM_BASE                 #
#                            -D_..X_RSTACK_END=_..X_SRAM_END                   #
#                            "-Ointel-extended=E:\Рабочая програсса РЭА (образ #
#                            ец)\LABORATOR_WORKS\ADC_UART\Debug\Exe\ADC_UART.h #
#                            ex"                                               #
#                            -s __program_start                                #
#                            "C:\Program Files\IAR Systems\Embedded Workbench  #
#                            4.0 Evaluation\avr\LIB\CLIB\cl1s-ec_mul.r90"      #
#                            -e_small_write=_formatted_write                   #
#                            -e_medium_read=_formatted_read                    #
#                                                                              #
#                        Copyright 1987-2006 IAR Systems. All rights reserved. #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE      00000000  Relocatable, from module : ?RESET




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  R6              = REG
  R7              = REG
  __64bit_doubles = disabled
  __cpu           = 1
  __cpu_name      = ATmega8
  __enhanced_core = enabled
  __has_elpm      = false
  __memory_model  = 2
  __rt_version    = 3



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _..X_RSTACK_END         0000045F 
           _..X_RSTACK_BASE        00000060 
           _..X_CSTACK_END         0000045F 
           _..X_CSTACK_BASE        00000060 
           _..X_FLASH_BASE         00000026 
           _..X_RSTACK_SIZE        00000020 
           _..X_CSTACK_SIZE        00000020 
           _..X_HUGE_HEAP_SIZE     00000000 
           _..X_FAR_HEAP_SIZE      00000000 
           _..X_NEAR_HEAP_SIZE     00000000 
           _..X_TINY_HEAP_SIZE     00000000 
           _..X_HEAP_SIZE          00000010 
           _..X_EEPROM_START       00000000 
           _..X_EEPROM_END         000001FF 
           _..X_EXT_NV_SIZE        00000000 
           _..X_EXT_NV_BASE        0000045F 
           _..X_EXT_ROM_SIZE       00000000 
           _..X_EXT_ROM_BASE       0000045F 
           _..X_EXT_SRAM_SIZE      00000000 
           _..X_EXT_SRAM_BASE      0000045F 
           _..X_SRAM_END           0000045F 
           _..X_SRAM_TSIZE         000000A0 
           _..X_SRAM_TBASE         00000060 
           _..X_SRAM_BASE          00000060 
           _..X_FLASH_END          00001FFF 
           _..X_FLASH_NEND         00001FFF 
           _..X_INTVEC_SIZE        00000026 
    *************************************************************************

  FILE NAME : E:\Рабочая програсса РЭА (образец)\LABORATOR_WORKS\ADC_UART\Debug\Obj\float2ASCIIasm.r90
  PROGRAM MODULE, NAME : float2ASCII

  SEGMENTS IN THE MODULE
  ======================
CSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000002C - 0000018D (0x162 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BSD_FP                  0000002C        write_data_2Buffer (main_uart_rem)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000005 )
           LOCAL                   ADDRESS         
           =====                   =======         
           int_bcd                 0000005E 
           int_shift               0000004E 
           int_loop_1              00000060 
           int_loop_2              00000074 
           int_loop_3              00000088 
           int_loop_4              00000098 
           int_loop_5              000000A8 
           f_prep                  000000BA 
           f_conv                  000000C6 
           f_shift                 000000BC 
           f_conv1                 000000C8 
           nor                     00000122 
           round                   0000012E 
           move_str                00000156 
           next_digit              0000013E 
           round_end               00000154 
           int_digits              00000168 
           point                   00000174 
           f_digits                00000178 
           enndd                   00000186 

    *************************************************************************

  FILE NAME : E:\Рабочая програсса РЭА (образец)\LABORATOR_WORKS\ADC_UART\Debug\Obj\main_uart_rem.r90
  PROGRAM MODULE, NAME : main_uart_rem

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Relative segment, address: DATA 00000024 - 00000025 (0x2 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_ADC                  00000024 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000026 - 00000026 (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_ADCSR                00000026 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000027 - 00000027 (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_ADMUX                00000027 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000029 - 00000029 (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UBRRL                00000029 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000002A - 0000002A (0x1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSRB                0000002A 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000002B - 0000002B (0x1 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSRA                0000002B 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000002C - 0000002C (0x1 bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UDR                  0000002C 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000031 - 00000031 (0x1 bytes), align: 0
  Segment part 8. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_DDRD                 00000031 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000040 - 00000040 (0x1 bytes), align: 0
  Segment part 9. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UBRRH                00000040 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000043 - 00000043 (0x1 bytes), align: 0
  Segment part 10. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_OCR2                 00000043 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000045 - 00000045 (0x1 bytes), align: 0
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR2                00000045 
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000000A0 - 000000AB (0xc bytes), align: 0
  Segment part 19.            Intra module refs:   ?Subroutine1
                                                   ADCinterrupt
                                                   main
                                                   write_data_2Buffer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Vin                     000000A4 
           accumulator             000000A0 
           samples                 000000AA 
           temp                    000000A8 
    -------------------------------------------------------------------------
NEAR_Z
  Segment part 21. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           result                  
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000000AC - 0000012B (0x80 bytes), align: 0
  Segment part 22.            Intra module refs:   oversampled
                                                   write_data_2Buffer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Str_Buff                000000AC 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000018E - 00000215 (0x88 bytes), align: 1
  Segment part 23.            Intra module refs:   ADCinterrupt::??INTVEC 28
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCinterrupt            0000018E 
               interrupt function
               stack 1 = 00000000 ( 00000015 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000216 - 0000021D (0x8 bytes), align: 1
  Segment part 24.            Intra module refs:   ADCinterrupt
                                                   oversampled
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            00000216 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000021E - 00000229 (0xc bytes), align: 1
  Segment part 25.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           init_adc                0000021E 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000022A - 0000023B (0x12 bytes), align: 1
  Segment part 26.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           init_uart               0000022A 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000023C - 00000243 (0x8 bytes), align: 1
  Segment part 27.            Intra module refs:   write_ascii
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           send                    0000023C 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 28. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           init_counter            
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000244 - 00000261 (0x1e bytes), align: 1
  Segment part 29.            Intra module refs:   oversampled
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           write_ascii             00000244 
               calls direct
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000262 - 0000027B (0x1a bytes), align: 1
  Segment part 30.            Intra module refs:   oversampled
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           vin                     00000262 
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000027C - 00000285 (0xa bytes), align: 1
  Segment part 31.            Intra module refs:   ?Subroutine0
                                                   vin
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            0000027C 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000286 - 000002F1 (0x6c bytes), align: 1
  Segment part 32.            Intra module refs:   oversampled
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           write_data_2Buffer      00000286 
               calls direct
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000002F2 - 000002F5 (0x4 bytes), align: 1
  Segment part 33.            Intra module refs:   oversampled
                                                   vin
                                                   write_ascii
                                                   write_data_2Buffer
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            000002F2 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000002F6 - 00000345 (0x50 bytes), align: 1
  Segment part 34.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           oversampled             000002F6 
               calls direct
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000346 - 0000034F (0xa bytes), align: 1
  Segment part 35.            Intra module refs:   oversampled
                                                   vin
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            00000346 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000350 - 0000035B (0xc bytes), align: 1
  Segment part 36.            Intra module refs:   oversampled
                                                   vin
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            00000350 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000035C - 0000036B (0x10 bytes), align: 1
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    0000035C        ?cstartup_call_main (?C_STARTUP)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000001C, align: 0
  Segment part 12. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 0000001C 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000001D, align: 0
  Segment part 13. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 0000001D 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000001E, align: 0
  Segment part 14. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                0000001E 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000001F, align: 0
  Segment part 15. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                0000001F 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000001D (0x1e bytes), align: 1
  Segment part 16. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCinterrupt::??INTVEC 28
                                   0000001C 
    -------------------------------------------------------------------------
CSTACK
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE 00000026 - 0000002B (0x6 bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 19
                                                   Str_Buff
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_Z>
                                   00000026 

    *************************************************************************

  FILE NAME : C:\Program Files\IAR Systems\Embedded Workbench 4.0 Evaluation\avr\LIB\CLIB\cl1s-ec_mul.r90
  LIBRARY MODULE, NAME : ?__exit

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000036C - 00000371 (0x6 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __exit                  0000036E 
           ?C_EXIT                 0000036E 
           ?C_FUNCALL              0000036C 
           _exit                   0000036C        ?cstartup_call_main (?C_STARTUP)
           exit                    0000036C        ?cstartup_call_main (?C_STARTUP)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?RESET

  SEGMENTS IN THE MODULE
  ======================
INTVEC
  Common segment, address: CODE 00000000 - 00000001 (0x2 bytes), align: 1
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         00000000        Absolute parts (?ABS_ENTRY_MOD)
           ?RESET                  00000000        Segment part 2 (?C_STARTUP)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?C_STARTUP

  SEGMENTS IN THE MODULE
  ======================
CSTACK
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000372, align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?C_STARTUP              00000372        Segment part 0 (?RESET)
           __RESTART               00000372 
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __RSTACK_in_external_ram
                                   
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __RSTACK_in_external_ram_new_way
                                   
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000372 - 0000037D (0xc bytes), align: 1
  Segment part 5.             Intra module refs:   Segment part 2
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?zero_reg_initialization
                                   
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000037E - 0000037F (0x2 bytes), align: 1
  Segment part 7.             Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?call_low_level_init    0000037E 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000380 - 00000385 (0x6 bytes), align: 1
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?need_segment_init      00000380        ?<Segment init: NEAR_Z> (main_uart_rem)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000386 - 0000038B (0x6 bytes), align: 1
  Segment part 9.             Intra module refs:   ?call_low_level_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstartup_call_main     00000386 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?US_DIVMOD_L02

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000038C - 000003B3 (0x28 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?US_DIVMOD_L02          0000038C        ?SS_DIVMOD_L02 (?SS_DIVMOD_L02)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SS_DIVMOD_L02

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 000003B4 - 000003E1 (0x2e bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SS_DIVMOD_L02          000003BC        oversampled (main_uart_rem)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_SHR_L03

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 000003E2 - 000003F1 (0x10 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_SHR_L03             000003E2        ?F2L_L04 (?FLOATS_L04)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?UL_DIVMOD_L03

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL_DIVMOD_L03          

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SL_DIVMOD_L03

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SL_DIVMOD_L03          
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000003F2 - 00000401 (0x10 bytes), align: 1
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_NEG_L03              000003F2        ?F2L_L04 (?FLOATS_L04)
                                                   ?SL2F_L04 (?FLOATS_L04)
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_NEG_Q_L03            

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?FLOATS_L04

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000402 - 0000042B (0x2a bytes), align: 1
  Segment part 0.             Intra module refs:   ?F2L_L04
                                                   ?F_ADD_L04
                                                   ?F_DIV_L04
                                                   ?F_MUL_L04
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000042C - 00000483 (0x58 bytes), align: 1
  Segment part 1.             Intra module refs:   ?F_ADD_L04
                                                   ?F_DIV_L04
                                                   ?F_MUL_L04
                                                   ?SL2F_L04
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_ROUND_L04            0000044C 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000484 - 00000497 (0x14 bytes), align: 1
  Segment part 2.             Intra module refs:   ?UL2F_L04
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SL2F_L04               00000484        write_data_2Buffer (main_uart_rem)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000498 - 0000049B (0x4 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?UL2F_L04               00000498        ADCinterrupt (main_uart_rem)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000049C - 000004D1 (0x36 bytes), align: 1
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F2L_L04                0000049C        oversampled (main_uart_rem)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000004D2 - 000004FF (0x2e bytes), align: 1
  Segment part 5.             Intra module refs:   ?F_ADD_L04
                                                   ?F_DIV_L04
                                                   ?F_MUL_L04
                                                   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?TEST_P_L04             000004D2 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000500 - 0000051F (0x20 bytes), align: 1
  Segment part 6.             Intra module refs:   ?F_ADD_L04
                                                   ?F_DIV_L04
                                                   ?F_MUL_L04
                                                   Segment part 12
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000520 - 000005C7 (0xa8 bytes), align: 1
  Segment part 7.             Intra module refs:   Segment part 12
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_ADD_L04              00000540        ?Subroutine0 (main_uart_rem)
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_SUB_L04              
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000005C8 - 000005D3 (0xc bytes), align: 1
  Segment part 9.             Intra module refs:   ?F2L_L04
                                                   ?F_DIV_L04
                                                   ?F_INFINITE_L04
                                                   ?F_MUL_L04
                                                   ?F_NAN_L04
                                                   ?F_ROUND_L04
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_ZERO_L04             000005C8 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000005D4 - 000005DB (0x8 bytes), align: 1
  Segment part 10.            Intra module refs:   ?F_DIV_L04
                                                   ?F_MUL_L04
                                                   ?F_ROUND_L04
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_INFINITE_L04         000005D4 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000005DC - 000005E1 (0x6 bytes), align: 1
  Segment part 11.            Intra module refs:   ?F_ADD_L04
                                                   ?F_DIV_L04
                                                   ?F_MUL_L04
                                                   Segment part 12
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_NAN_L04              000005DC 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000005E2 - 000005FB (0x1a bytes), align: 1
  Segment part 12.            Intra module refs:   ?F_DIV_L04
                                                   ?F_MUL_L04
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000005FC - 000006D1 (0xd6 bytes), align: 1
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_MUL_L04              000005FC        vin (main_uart_rem)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000006D2 - 000007E1 (0x110 bytes), align: 1
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_DIV_L04              000006EE        oversampled (main_uart_rem)
                                                   vin (main_uart_rem)
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_CMP_EQ_L04           
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_CMP_LT_L04           
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?F_CMP_GE_L04           

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PROLOGUE_L09

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE16_L09         
    -------------------------------------------------------------------------
CODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE15_L09         
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE14_L09         
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE13_L09         
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE12_L09         
    -------------------------------------------------------------------------
CODE
  Segment part 5. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE11_L09         
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE10_L09         
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE9_L09          
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE8_L09          
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE7_L09          
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE6_L09          
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE5_L09          
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000007E2 - 000007E3 (0x2 bytes), align: 1
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE4_L09          000007E2        oversampled (main_uart_rem)
                                                   vin (main_uart_rem)
                                                   write_ascii (main_uart_rem)
                                                   write_data_2Buffer (main_uart_rem)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000007E4 - 000007E5 (0x2 bytes), align: 1
  Segment part 13.            Intra module refs:   ?PROLOGUE4_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE3_L09          000007E4 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000007E6 - 000007E7 (0x2 bytes), align: 1
  Segment part 14.            Intra module refs:   ?PROLOGUE3_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE2_L09          000007E6 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000007E8 - 000007E9 (0x2 bytes), align: 1
  Segment part 15.            Intra module refs:   ?PROLOGUE2_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE1_L09          000007E8 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000007EA - 000007EB (0x2 bytes), align: 1
  Segment part 16.            Intra module refs:   ?PROLOGUE1_L09

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?EPILOGUE_B_L09

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B16_L09       
    -------------------------------------------------------------------------
CODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B15_L09       
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B14_L09       
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B13_L09       
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B12_L09       
    -------------------------------------------------------------------------
CODE
  Segment part 5. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B11_L09       
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B10_L09       
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B9_L09        
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B8_L09        
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B7_L09        
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B6_L09        
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B5_L09        
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000007EC - 000007ED (0x2 bytes), align: 1
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B4_L09        000007EC        ?Subroutine4 (main_uart_rem)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000007EE - 000007EF (0x2 bytes), align: 1
  Segment part 13.            Intra module refs:   ?EPILOGUE_B4_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B3_L09        000007EE 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000007F0 - 000007F1 (0x2 bytes), align: 1
  Segment part 14.            Intra module refs:   ?EPILOGUE_B3_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B2_L09        000007F0 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000007F2 - 000007F3 (0x2 bytes), align: 1
  Segment part 15.            Intra module refs:   ?EPILOGUE_B2_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B1_L09        000007F2 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000007F4 - 00000801 (0xe bytes), align: 1
  Segment part 16.            Intra module refs:   ?EPILOGUE_B1_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B0_L09        000007F4 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR6_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000802, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R6_is_cg_reg
                                   00000802        ADCinterrupt (main_uart_rem)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR7_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000802, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R7_is_cg_reg
                                   00000802        ADCinterrupt (main_uart_rem)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?low_level_init

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000802 - 00000805 (0x4 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init        00000802        ?call_low_level_init (?C_STARTUP)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 2. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memset

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000806 - 00000817 (0x12 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memset                  00000806        write_data_2Buffer (main_uart_rem)
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 2. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?segment_init

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000818 - 0000081F (0x8 bytes), align: 1
  Segment part 3.             Intra module refs:   __segment_init
           LOCAL                   ADDRESS         
           =====                   =======         
           __memclr                00000818 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000820 - 00000827 (0x8 bytes), align: 1
  Segment part 4.             Intra module refs:   __segment_init
           LOCAL                   ADDRESS         
           =====                   =======         
           __flashcpy              00000820 
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000828 - 00000833 (0xc bytes), align: 1
  Segment part 5.             Intra module refs:   __flashcpy
                                                   __memclr
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000834 - 00000867 (0x34 bytes), align: 1
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __segment_init          00000834        ?need_segment_init (?C_STARTUP)
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
RSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Segment part 7. NOT NEEDED.

    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?FILLER_BYTES

  SEGMENTS IN THE MODULE
  ======================
INTVEC
  Common segment, address: CODE 00000000 - 0000001D (0x1e bytes), align: 0
  Segment part 1.
    -------------------------------------------------------------------------
?FILL1
  Relative segment, address: CODE 0000001E - 00000025 (0x8 bytes), align: 0
  Segment part 0.




                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

Module               CODE      DATA
------               ----      ----
                    (Rel)  (Rel)  (Abs)
?C_STARTUP             26
?EPILOGUE_B_L09        22
?FILLER_BYTES           8
  + common             30
?FLOATS_L04           992
?PROLOGUE_L09          10
?RESET
  + common              2
?SL_DIVMOD_L03         16
?SS_DIVMOD_L02         46
?UL_SHR_L03            16
?US_DIVMOD_L02         40
?__exit                 6
?low_level_init         4
?memset                18
?segment_init          80
float2ASCII           354
main_uart_rem         484    140     12
  + common             30
N/A (command line)            64
N/A (alignment)
----------          -----    ---     --
Total:              2 122    204     12
  + common             30


                ****************************************
                *                                      *
                *              CALL GRAPH              *
                *                                      *
                ****************************************

  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK   RSTACK
    | Stack used (prev) :  00000000 00000000
  01  ADCinterrupt
      | Stack used (prev) :  00000000 00000000
      | + function block  :  00000015 00000004
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  00000015 00000004


  ->Sub-tree of type: Function tree
                             CSTACK   RSTACK
    | Stack used (prev) :  00000015 00000004
  04        memset
            | Stack used (prev) :  00000015 00000004
            | + function block  :  00000000 00000002
  04        BSD_FP
            | Stack used (prev) :  00000015 00000004
            | + function block  :  00000002 00000005
  03      write_data_2Buffer
          | Stack used (prev) :  00000017 00000009
          | + function block  :  00000004 00000002
  03      vin
          | Stack used (prev) :  00000015 00000004
          | + function block  :  00000004 00000004
  04        send
            | Stack used (prev) :  00000015 00000004
            | + function block  :  00000000 00000002
  04        send
            | Stack used (prev) :  00000015 00000004
            | + function block  :  00000000 00000002
            |  Already listed
  04        send
            | Stack used (prev) :  00000015 00000004
            | + function block  :  00000000 00000002
            |  Already listed
  03      write_ascii
          | Stack used (prev) :  00000015 00000006
          | + function block  :  00000004 00000002
  02    oversampled
        | Stack used (prev) :  0000001B 0000000B
        | + function block  :  00000004 00000002
  02    init_uart
        | Stack used (prev) :  00000015 00000004
        | + function block  :  00000000 00000002
  02    init_adc
        | Stack used (prev) :  00000015 00000004
        | + function block  :  00000000 00000002
  01  main
      | Stack used (prev) :  0000001F 0000000D
      | + function block  :  00000000 00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  0000001F 0000000F


  ->Sub-tree of type: Function tree
                             CSTACK   RSTACK
    | Stack used (prev) :  0000001F 0000000F
  01  __low_level_init
      | Stack used (prev) :  0000001F 0000000F
      | + function block  :  00000000 00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  0000001F 00000011


  ->Sub-tree of type: Function tree
                             CSTACK   RSTACK
    | Stack used (prev) :  0000001F 00000011
  02    __flashcpy
        | Stack used (prev) :  0000001F 00000011
        | + function block  :  00000000 00000002
  02    __memclr
        | Stack used (prev) :  0000001F 00000011
        | + function block  :  00000000 00000002
  01  __segment_init
      | Stack used (prev) :  0000001F 00000013
      | + function block  :  00000000 00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  0000001F 00000015




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
INTVEC               CODE          00000000 - 0000001D          1E   com    1
?FILL1               CODE          0000001E - 00000025           8   rel    0
INITTAB              CODE          00000026 - 0000002B           6   rel    0
CODE                 CODE          0000002C - 00000867         83C   rel    1
ABSOLUTE             DATA               0000001C                     rel    0
                     DATA               0000001D                   
                     DATA               0000001E                   
                     DATA               0000001F                   
                     DATA          00000024 - 00000027           4 
                     DATA          00000029 - 0000002C           4 
                     DATA          00000031 - 00000031           1 
                     DATA          00000040 - 00000040           1 
                     DATA          00000043 - 00000043           1 
                     DATA          00000045 - 00000045           1 
CSTACK               DATA          00000060 - 0000007F          20   dse    0
RSTACK               DATA          00000080 - 0000009F          20   dse    0
NEAR_I               DATA               000000A0                     dse    0
NEAR_Z               DATA          000000A0 - 0000012B          8C   rel    0

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 2 144 bytes of CODE memory (+             8 range fill )
   204 bytes of DATA memory (+ 12 absolute )

Errors: none
Warnings: none

