##############################################################################
#                                                                            #
#                                                      09/Feb/2008  18:10:39 #
# IAR Atmel AVR C/C++ Compiler V4.20A/W32, Evaluation Version                #
# Copyright 1996-2006 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Source file  =  C:\Documents and Settings\Serg\SERG_DOCUM\_ПРГРАММА     #
#                    ИНСТИТУТ\LABORATOR_WORKS\Lab_2_DIG_IOandTimer\main.c    #
#    Command line =  "C:\Documents and Settings\Serg\SERG_DOCUM\_ПРГРАММА    #
#                    ИНСТИТУТ\LABORATOR_WORKS\Lab_2_DIG_IOandTimer\main.c"   #
#                    --cpu=m8 -ms -o "C:\Documents and                       #
#                    Settings\Serg\SERG_DOCUM\_ПРГРАММА                      #
#                    ИНСТИТУТ\LABORATOR_WORKS\Lab_2_DIG_IOandTimer\Debug\Obj #
#                    \" -lC "C:\Documents and Settings\Serg\SERG_DOCUM\_ПРГР #
#                    АММА ИНСТИТУТ\LABORATOR_WORKS\Lab_2_DIG_IOandTimer\Debu #
#                    g\List\" -lA "C:\Documents and                          #
#                    Settings\Serg\SERG_DOCUM\_ПРГРАММА                      #
#                    ИНСТИТУТ\LABORATOR_WORKS\Lab_2_DIG_IOandTimer\Debug\Lis #
#                    t\" --initializers_in_flash -z9 --cross_call_passes=3   #
#                    --debug -DENABLE_BIT_DEFINITIONS --do_cross_call -e -I  #
#                    "C:\Program Files\IAR Systems\Embedded Workbench 4.0    #
#                    Evaluation\avr\INC\" -I "C:\Program Files\IAR           #
#                    Systems\Embedded Workbench 4.0                          #
#                    Evaluation\avr\INC\CLIB\" --eeprom_size 512             #
#    List file    =  C:\Documents and Settings\Serg\SERG_DOCUM\_ПРГРАММА     #
#                    ИНСТИТУТ\LABORATOR_WORKS\Lab_2_DIG_IOandTimer\Debug\Lis #
#                    t\main.lst                                              #
#    Object file  =  C:\Documents and Settings\Serg\SERG_DOCUM\_ПРГРАММА     #
#                    ИНСТИТУТ\LABORATOR_WORKS\Lab_2_DIG_IOandTimer\Debug\Obj #
#                    \main.r90                                               #
#                                                                            #
#                                                                            #
##############################################################################

C:\Documents and Settings\Serg\SERG_DOCUM\_ПРГРАММА ИНСТИТУТ\LABORATOR_WORKS\Lab_2_DIG_IOandTimer\main.c
      1          #include "SHow_FUN.h"
      2          #include "Timer_2_CNTRL.h"
      3          #include "INDIKATE.h"
      4          

   \                                 In segment CODE, align 2, keep-with-next
      5          void main( void )
   \                     main:
      6          {
   \   00000000   ....               RCALL   ?PROLOGUE2_L09
      7           /// переменная счетчик тиков по 100мкс
      8           u_int tick_cntr = 0;
   \   00000002   E080               LDI     R24, 0
   \   00000004   E090               LDI     R25, 0
      9          
     10            ///////////////////////////
     11            /// Предварительная настройка портов
     12            /// работаем с МК 1 к котрому прицеплены ЦАП и ключ силовой
     13            /// готовит порт для индикации результата Бит PB0 PORTB
     14            show_init();
   \   00000006   ....               RCALL   show_init
     15            /// настройка таймера 2 на генерацию временного интервала
     16            /// на опрос кнопок будет достаточно 20мс интервала
     17            Timer2_INIT();
   \   00000008   ....               RCALL   Timer2_INIT
     18            Timer2_START();  //// запуск таймера
   \   0000000A   ....               RCALL   Timer2_START
     19            /// процедура настройка индикация режим работы
     20            InitIndikate();
   \   0000000C   ....               RCALL   InitIndikate
     21            /// ф установить режим индикации как будет гореть LED
     22            /// для установвки другого режима индикации - один из
     23            /// определенных === /// режим индикации светодиода
     24            Set_INDIK_VAL(LED_1SHORT);
   \   0000000E   E001               LDI     R16, 1
   \   00000010   ....               RCALL   Set_INDIK_VAL
     25          
     26            ///////////////////////////
     27            /// основной цикл
     28            while(1){
     29               ////////////////////////////////////////////////////////
     30               /// обработка таймера
     31               if(Timer2_CHECK()){/// каждые 100мкс
   \                     ??main_0:
   \   00000012   ....               RCALL   Timer2_CHECK
   \   00000014   2300               TST     R16
   \   00000016   F3E9               BREQ    ??main_0
     32                  tick_cntr++;    /// считаем 100мкс
   \   00000018   9601               ADIW    R25:R24, 1
     33          
     34                  /// функция выводит на ножку значение 10бит
     35                  /// что бы посмотреть его осциллографом
     36                  show_result(0xF0F0);
   \   0000001A   EF00               LDI     R16, 240
   \   0000001C   EF10               LDI     R17, 240
   \   0000001E   ....               RCALL   show_result
     37                  if(tick_cntr>=1000){     /// каждые 100 мс
   \   00000020   3E88               CPI     R24, 232
   \   00000022   E003               LDI     R16, 3
   \   00000024   0790               CPC     R25, R16
   \   00000026   F3A8               BRCS    ??main_0
     38                     tick_cntr = 0;        /// переустановим счетчик
   \   00000028   E080               LDI     R24, 0
   \   0000002A   E090               LDI     R25, 0
     39                     Indikate( );          /// процедура индикации текущего режима работы
   \   0000002C   ....               RCALL   Indikate
   \   0000002E   CFF1               RJMP    ??main_0
     40                  }
     41          
     42               }/// обработка таймера каждые 100мкс
     43            }
     44          }
     45          
     46          //// задание добавить переменную которую будем передавать
     47          /// ф show_result и промсмотреть изменения осциллографом
     48          

   Maximum stack usage in bytes:

     Function           CSTACK RSTACK
     --------           ------ ------
     main                   2      2
       -> show_init         2      2
       -> Timer2_INIT       2      2
       -> Timer2_START      2      2
       -> InitIndikate      2      2
       -> Set_INDIK_VAL     2      2
       -> Timer2_CHECK      2      2
       -> show_result       2      2
       -> Indikate          2      2


   Segment part sizes:

     Function/Label Bytes
     -------------- -----
     main             48

 
 48 bytes in segment CODE
 
 48 bytes of CODE memory

Errors: none
Warnings: none
